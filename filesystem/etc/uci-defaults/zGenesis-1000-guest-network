#!/bin/sh
# Copyright (C) 2017 Gregory L. Dietsche
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by the
# Free Software Foundation. This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see http://www.gnu.org/licenses/.

netname=Guest
wifiname='Genesis39-Guest'
wifikey='Genesis39'

uci -q batch <<-EOT
  set network.$netname=interface
  set network.$netname.type='bridge'
  set network.$netname.proto='static'
  set network.$netname.ipaddr='192.168.2.1'
  set network.$netname.netmask='255.255.255.0'
EOT

uci -q batch <<-EOT
  set dhcp.$netname=dhcp
  set dhcp.$netname.start='50'
  set dhcp.$netname.leasetime='6h'
  set dhcp.$netname.limit='200'
  set dhcp.$netname.interface=$netname
EOT

uci -q batch <<-EOT
  set dhcp.$netname.ra='server'
  set dhcp.$netname.dhcpv6='server'
  set dhcp.$netname.ra_management='1'
EOT

has_radio=$(uci get wireless.radio0)
if [[ $? -eq 0  ]]; then
  iface=$(uci add wireless wifi-iface 2>/dev/null)
  uci -q batch <<-EOT
    set wireless.$iface.device='radio0'
    set wireless.$iface.mode='ap'
    set wireless.$iface.ssid='${wifiname}'
    set wireless.$iface.key='${wifikey}'
    set wireless.$iface.encryption='psk2'
    set wireless.$iface.network=$netname
    set wireless.$iface.isolate='1'
EOT
fi

has_radio=$(uci get wireless.radio1 2>/dev/null)
if [[ $? -eq 0  ]]; then
  iface=$(uci add wireless wifi-iface)
  uci -q batch <<-EOT
    set wireless.$iface.device='radio1'
    set wireless.$iface.mode='ap'
    set wireless.$iface.ssid='${wifiname}'
    set wireless.$iface.key='${wifikey}'
    set wireless.$iface.encryption='psk2'
    set wireless.$iface.network=$netname
    set wireless.$iface.isolate='1'
EOT
fi

rule=$(uci add firewall zone)
uci -q batch <<-EOT
  set firewall.$rule.input='REJECT'
  set firewall.$rule.forward='REJECT'
  set firewall.$rule.output='ACCEPT'
  set firewall.$rule.name=$netname
  set firewall.$rule.network=$netname
EOT

rule=$(uci add firewall forwarding)
uci -q batch <<-EOT
  set firewall.$rule.src='lan'
  set firewall.$rule.dest=$netname
EOT

rule=$(uci add firewall forwarding)
uci -q batch <<-EOT
  set firewall.$rule.src=$netname
  set firewall.$rule.dest='wan'
EOT

rule=$(uci add firewall rule)
uci -q batch <<-EOT
  set firewall.$rule.target='ACCEPT'
  set firewall.$rule.proto='tcp udp'
  set firewall.$rule.dest_port='53'
  set firewall.$rule.src=$netname
  set firewall.$rule.name='${netname} dns'
EOT

rule=$(uci add firewall rule)
uci -q batch <<-EOT
  set firewall.$rule.target='ACCEPT'
  set firewall.$rule.proto='udp'
  set firewall.$rule.src=$netname
  set firewall.$rule.family='ipv4'
  set firewall.$rule.dest_port='67'
  set firewall.$rule.src_port='68'
  set firewall.$rule.name='${netname} dhcp4'
EOT

rule=$(uci add firewall rule)
uci -q batch <<-EOT
  set firewall.$rule.target='ACCEPT'
  set firewall.$rule.src=$netname
  set firewall.$rule.name='${netname} dhcp6'
  set firewall.$rule.family='ipv6'
  set firewall.$rule.dest_port='547'
  set firewall.$rule.proto='udp'
  set firewall.$rule.src_port='546'
EOT

rule=$(uci add firewall rule)
uci -q batch <<-EOT
  set firewall.$rule.target='ACCEPT'
  set firewall.$rule.family='ipv6'
  set firewall.$rule.proto='icmp'
  set firewall.$rule.src='$netname'
  set firewall.$rule.name='${netname} icmp6'
EOT

if [[ $(uci get system.ntp.enable_server) -eq 1  ]]; then
  rule=$(uci add firewall rule)
  uci -q batch <<-EOT
    set firewall.$rule.target='ACCEPT'
    set firewall.$rule.proto='udp'
    set firewall.$rule.src='$netname'
    set firewall.$rule.name='${netname} ntp'
    set firewall.$rule.dest_port='123'
EOT
fi

uci commit
